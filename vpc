
#install terraform , aws cli

aws configure
mkdir project
cd project
vim vpc.tf

resource "aws_vpc" "test-vpc" {
  cidr_block = "10.0.0.0/16"


  tags = {
    Name = "Main"
  }
}
resource "aws_subnet" "public-subnet" {
  vpc_id     = aws_vpc.test-vpc.id
  cidr_block = "10.0.0.0/24"

  tags = {
    Name = "Public-subnet"
  }
}
resource "aws_subnet" "private-subnet" {
  vpc_id            = aws_vpc.test-vpc.id
  availability_zone = "us-east-1a"
  cidr_block        = "10.0.1.0/24"

  tags = {
    Name = "Private-subnet"
  }
}
resource "aws_security_group" "test_access" {
  name        = "test_access"
  vpc_id      = aws_vpc.test-vpc.id
  description = "allow ssh and http"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
resource "aws_internet_gateway" "test-igw" {
  vpc_id = aws_vpc.test-vpc.id

  tags = {
    Name = "test-igw"
  }
}


resource "aws_route_table" "public-rt" {
  vpc_id = aws_vpc.test-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.test-igw.id
  }


  tags = {
    Name = "public-rt"

  }
}

resource "aws_route_table_association" "public-asso" {
  subnet_id      = aws_subnet.public-subnet.id
  route_table_id = aws_route_table.public-rt.id
}

resource "aws_instance" "pavi-server" {
  ami             = "ami-05ffe3c48a9991133"
  subnet_id       = aws_subnet.public-subnet.id
  instance_type   = "t2.micro"
  security_groups = ["${aws_security_group.test_access.id}"]
  key_name        = "ltimindtree"
  tags = {
    Name     = "test-World"
    Stage    = "testing"
    Location = "chennai"
  }

}
resource "aws_eip" "pavi-ec2-eip" {
  instance = aws_instance.pavi-server.id
}
resource "aws_key_pair" "ltimindtree" {
  key_name   = "ltimindtree"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCjqZ9TYZUHklwn+k8lyh5rTqIYL6rrxjJqOnzoWI4ZKeVBbiHv4S1ZenC5fXO7RXcrvVPA8MoSrV8MoLvSDjYh93KlsrxpZLVrAeMB4C1m4OdQJA59KGsA5MsHP/0/08I/+O8Cky3NZq/FuEVb+wF3UChy9Yef38Jk2k2n77OHQG9iAtiPyCfLHq0a+D3uA2DX1jnku6ojxfssDDJCTWJ+5EgM6EjDWWFjdLx4tZUqYRFWcFRcmBKi8xUKADOpWDmVOUs392QmA2HwTh6JuIAInFrlxPykaq8axscw88ZhtWYa1/2qR6ndsL2Ti3ANE0/XdRTy3xOw7DEDoe9u/LdX4bXVqda7mjX8daIjT9jqdhC8wohvMskfF0TjN1VCrlOlPG0obGXjqRU50AjvIaBDNKCgYxUXsWks0Eoj6o4/v0T8q87ALwqwyC4PFubmDcTNOWxjd1GZvCT2vTmcvduUsWaCTBId+sh8z9aX2SB3cr9hZk6kpYflgxWM1qSUUaU= root@ip-172-31-30-36.ec2.internal"
}
resource "aws_instance" "database-server" {
  ami             = "ami-05ffe3c48a9991133"
  subnet_id       = aws_subnet.private-subnet.id
  instance_type   = "t2.micro"
  security_groups = ["${aws_security_group.test_access.id}"]
  key_name        = "ltimindtree"
  tags = {
    Name     = "db-World"
    Stage    = "stage-base"
    Location = "delhi"
  }

}
resource "aws_eip" "nat-eip" {
}
resource "aws_nat_gateway" "my-ngw" {
  allocation_id = aws_eip.nat-eip.id
  subnet_id     = aws_subnet.public-subnet.id
}
resource "aws_route_table" "private-rt" {
  vpc_id = aws_vpc.test-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.my-ngw.id
  }


  tags = {
    Name = "private-rt"
  }
}
resource "aws_route_table_association" "private-asso" {
  subnet_id      = aws_subnet.private-subnet.id
  route_table_id = aws_route_table.private-rt.id
}
